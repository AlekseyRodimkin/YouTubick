services:
  web:
    build: .
    image: fastapi_app:latest
    container_name: fastapi_app
    user: "1000:1000"
    #    ports:
    #      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - redis
    env_file: .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - BTC_ADDRESS=${BTC_ADDRESS}
      - ETH_ADDRESS=${ETH_ADDRESS}
      - SOL_ADDRESS=${SOL_ADDRESS}
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${SMTP_USER}
    volumes:
      - ./app/static:/app/static:ro
      - shared_data:/app/uploads
      - logs_data:/app/logs
    expose:
      - "8080"
    networks:
      - youtubick_network
      - nginx-proxy

  worker:
    image: fastapi_app:latest
    container_name: celery_worker
    user: "1000:1000"
    env_file: .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    command: celery -A config.config worker --loglevel=info
    volumes:
      - shared_data:/app/uploads
      - logs_data:/app/logs
    networks:
      - youtubick_network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - youtubick_network

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - ./app/static:/app/static:ro
    networks:
      - youtubick_network
      - nginx-proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: unless-stopped
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - /usr/share/nginx/html:/usr/share/nginx/html
    networks:
      - youtubick_network
      - nginx-proxy


networks:
  youtubick_network:
    name: youtubick_network
  nginx-proxy:
    external: true

volumes:
  certs:
  redis_data:
    name: youtubick_redis_data
  shared_data:
    name: youtubick_shared_data
    external: true
  logs_data:
    name: youtubick_logs_data
    external: true

